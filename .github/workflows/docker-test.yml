name: Docker Website Test
on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
jobs:
  test:
    runs-on: ubuntu-latest
   
    steps:
    - uses: actions/checkout@v3
     
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
   
    - name: Debug directory structure
      run: |
        echo "Current working directory:"
        pwd
        echo "Repository root contents:"
        ls -la
        echo "MeterThing directory contents (if exists):"
        ls -la MeterThing || echo "MeterThing directory not found"
   
    - name: Create config files from secrets
      run: |
        # Create the config files in the correct location
        mkdir -p ./MeterThing/meterthing/backend
        echo '${{ secrets.CHIRPSTACK_CONFIG }}' > ./MeterThing/meterthing/backend/chirpstack_config.json
        echo '${{ secrets.CREDENTIALS_JSON }}' > ./MeterThing/meterthing/backend/credentials.json
        
        # Verify files were created
        ls -la ./MeterThing/meterthing/backend/
     
    - name: Build and start containers
      working-directory: ./MeterThing/meterthing
      run: |
        # Run docker compose from the correct directory
        docker compose up -d
        # Check container status
        docker compose ps
       
    - name: Wait for services to start
      run: |
        echo "Waiting for services to start up..."
        sleep 60
        
    - name: Check if backend is running
      run: |
        echo "Checking backend connection..."
        if curl -s -o /dev/null -w "%{http_code}" http://localhost:8000 | grep -q "200\|404"; then
          echo "Backend is up and running!"
        else
          echo "Backend failed to start or is not responding properly"
          docker logs meterthing-backend
          exit 1
        fi
       
    - name: Check if frontend is running
      run: |
        echo "Checking frontend connection..."
        if curl -s -o /dev/null -w "%{http_code}" http://localhost:5173 | grep -q "200\|404\|301\|302"; then
          echo "Frontend is up and running!"
        else
          echo "Frontend failed to start or is not responding properly"
          docker logs meterthing-frontend
          exit 1
        fi
   
    - name: Run integration tests
      run: |
        echo "Running integration tests..."
        # Basic test - a successful test is just being able to connect to both services
        echo "All tests passed!"
       
    - name: Stop containers
      if: always()
      working-directory: ./MeterThing/meterthing
      run: |
        docker compose down